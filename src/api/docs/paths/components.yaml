# Components API Paths

paths:
  /components:
    get:
      tags:
        - Components
      summary: List components
      description: Get a paginated list of components with optional filtering
      security:
        - bearerAuth: []
      parameters:
        - name: limit
          in: query
          description: Number of items to return
          schema:
            type: integer
            minimum: 1
            maximum: 1000
            default: 20
        - name: offset
          in: query
          description: Number of items to skip
          schema:
            type: integer
            minimum: 0
            default: 0
        - name: contractId
          in: query
          description: Filter by contract ID
          schema:
            type: string
        - name: search
          in: query
          description: Search in name, description, or author
          schema:
            type: string
      responses:
        200:
          description: List of components
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Component'
                  pagination:
                    $ref: '#/components/schemas/Pagination'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    post:
      tags:
        - Components
      summary: Create component
      description: Create a new component (requires MAINTAINER or OWNER role)
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  minLength: 1
                  maxLength: 255
                version:
                  type: string
                  pattern: '^\\d+\\.\\d+\\.\\d+$'
                description:
                  type: string
                author:
                  type: string
                keywords:
                  type: array
                  items:
                    type: string
                contractId:
                  type: string
                sourceCode:
                  type: string
                buildArtifacts:
                  type: object
              required:
                - name
                - version
                - description
                - author
                - contractId
                - sourceCode
            example:
              name: Button
              version: 1.0.0
              description: A reusable button component
              author: John Doe
              keywords: [button, ui, interactive]
              contractId: contract-123
              sourceCode: "import React from 'react'..."
              buildArtifacts: {}
      responses:
        201:
          description: Component created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Component'
        400:
          description: Invalid input data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Insufficient permissions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        409:
          description: Component already exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /components/{id}:
    get:
      tags:
        - Components
      summary: Get component
      description: Retrieve a specific component by ID or name:version
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: Component ID or name:version
          schema:
            type: string
      responses:
        200:
          description: Component details
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Component'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Component not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    patch:
      tags:
        - Components
      summary: Update component
      description: Update an existing component (requires MAINTAINER or OWNER role)
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: Component ID
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                description:
                  type: string
                keywords:
                  type: array
                  items:
                    type: string
                sourceCode:
                  type: string
                buildArtifacts:
                  type: object
            example:
              description: Updated button component with new features
              keywords: [button, ui, interactive, accessible]
      responses:
        200:
          description: Component updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Component'
        400:
          description: Invalid input data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Insufficient permissions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Component not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    delete:
      tags:
        - Components
      summary: Delete component
      description: Delete a component (requires OWNER role)
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: Component ID
          schema:
            type: string
      responses:
        200:
          description: Component deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Component deleted successfully
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Insufficient permissions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Component not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
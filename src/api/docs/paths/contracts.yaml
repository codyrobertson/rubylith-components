# Contracts API Paths

paths:
  /contracts:
    get:
      tags:
        - Contracts
      summary: List contracts
      description: Get a paginated list of contracts with optional filtering
      security:
        - bearerAuth: []
      parameters:
        - name: limit
          in: query
          description: Number of items to return
          schema:
            type: integer
            minimum: 1
            maximum: 1000
            default: 20
        - name: offset
          in: query
          description: Number of items to skip
          schema:
            type: integer
            minimum: 0
            default: 0
        - name: schemaVersion
          in: query
          description: Filter by schema version
          schema:
            type: string
        - name: runtimeFramework
          in: query
          description: Filter by runtime framework
          schema:
            type: string
        - name: styleEngineType
          in: query
          description: Filter by style engine type
          schema:
            type: string
        - name: search
          in: query
          description: Search in name, description, or author
          schema:
            type: string
      responses:
        200:
          description: List of contracts
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Contract'
                  pagination:
                    $ref: '#/components/schemas/Pagination'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    post:
      tags:
        - Contracts
      summary: Create contract
      description: Create a new contract definition (requires MAINTAINER or OWNER role)
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  minLength: 1
                  maxLength: 255
                version:
                  type: string
                  pattern: '^\\d+\\.\\d+\\.\\d+$'
                schemaVersion:
                  type: string
                  minLength: 1
                description:
                  type: string
                author:
                  type: string
                keywords:
                  type: array
                  items:
                    type: string
                schemaProps:
                  type: object
                schemaEvents:
                  type: object
                schemaMethods:
                  type: object
                validationRequired:
                  type: array
                  items:
                    type: string
                validationOptional:
                  type: array
                  items:
                    type: string
                validationRules:
                  type: object
                themeTokens:
                  type: array
                  items:
                    type: object
                themeVariants:
                  type: array
                  items:
                    type: object
                themeNamespace:
                  type: string
                layoutType:
                  type: string
                styleEngineType:
                  type: string
                styleEngineConfig:
                  type: object
                runtimeFramework:
                  type: string
                runtimeVersion:
                  type: string
                runtimePolyfills:
                  type: array
                  items:
                    type: string
                runtimeBrowserSupport:
                  type: object
                compatibilityMinSchemaVersion:
                  type: string
                compatibilityBreakingChanges:
                  type: array
                  items:
                    type: string
              required:
                - name
                - version
                - schemaVersion
                - description
                - author
                - keywords
                - schemaProps
                - schemaEvents
                - schemaMethods
                - validationRequired
                - validationOptional
                - validationRules
                - themeTokens
                - themeVariants
                - themeNamespace
                - layoutType
                - styleEngineType
                - styleEngineConfig
                - runtimeFramework
                - runtimeVersion
                - runtimePolyfills
                - runtimeBrowserSupport
                - compatibilityMinSchemaVersion
                - compatibilityBreakingChanges
            example:
              name: ButtonContract
              version: 1.0.0
              schemaVersion: 1.0.0
              description: Contract for button components
              author: John Doe
              keywords: [button, interactive, ui]
              schemaProps: {}
              schemaEvents: {}
              schemaMethods: {}
              validationRequired: []
              validationOptional: []
              validationRules: {}
              themeTokens: []
              themeVariants: []
              themeNamespace: button
              layoutType: flex
              styleEngineType: css-in-js
              styleEngineConfig: {}
              runtimeFramework: react
              runtimeVersion: 18.0.0
              runtimePolyfills: []
              runtimeBrowserSupport: {}
              compatibilityMinSchemaVersion: 1.0.0
              compatibilityBreakingChanges: []
      responses:
        201:
          description: Contract created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Contract'
        400:
          description: Invalid input data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Insufficient permissions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        409:
          description: Contract already exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /contracts/{id}:
    get:
      tags:
        - Contracts
      summary: Get contract
      description: Retrieve a specific contract by ID or name:version
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: Contract ID or name:version
          schema:
            type: string
      responses:
        200:
          description: Contract details
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Contract'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Contract not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    patch:
      tags:
        - Contracts
      summary: Update contract
      description: Update an existing contract (requires MAINTAINER or OWNER role)
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: Contract ID
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                description:
                  type: string
                keywords:
                  type: array
                  items:
                    type: string
                schemaProps:
                  type: object
                schemaEvents:
                  type: object
                schemaMethods:
                  type: object
                validationRules:
                  type: object
                themeTokens:
                  type: array
                  items:
                    type: object
                styleEngineConfig:
                  type: object
            example:
              description: Updated button contract with accessibility features
              keywords: [button, interactive, ui, accessible]
      responses:
        200:
          description: Contract updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Contract'
        400:
          description: Invalid input data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Insufficient permissions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Contract not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    delete:
      tags:
        - Contracts
      summary: Delete contract
      description: Delete a contract (requires OWNER role)
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: Contract ID
          schema:
            type: string
      responses:
        200:
          description: Contract deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Contract deleted successfully
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Insufficient permissions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Contract not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /contracts/{id}/compatibility:
    get:
      tags:
        - Contracts
      summary: Check contract compatibility
      description: Check compatibility between contract versions
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: Contract ID
          schema:
            type: string
        - name: targetVersion
          in: query
          description: Target version to check compatibility against
          schema:
            type: string
      responses:
        200:
          description: Compatibility information
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      contractId:
                        type: string
                      contractVersion:
                        type: string
                      minSchemaVersion:
                        type: string
                      breakingChanges:
                        type: array
                        items:
                          type: string
                      migrationGuide:
                        type: string
                      compatible:
                        type: boolean
                      targetVersion:
                        type: string
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Contract not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'